# Generated by Django 4.0.5 on 2022-07-28 10:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this item is active.', verbose_name='active status')),
                ('name', models.CharField(max_length=100, verbose_name='country name')),
                ('code', models.CharField(max_length=10, verbose_name='country code')),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this item is active.', verbose_name='active status')),
                ('name', models.CharField(max_length=200, verbose_name='state name')),
                ('code', models.CharField(max_length=10, verbose_name='state code')),
                ('unique_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='state unique id')),
                ('zone', models.CharField(blank=True, max_length=200, null=True, verbose_name='zone name')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.country')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StateZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this item is active.', verbose_name='active status')),
                ('unique_id', models.CharField(max_length=100, unique=True)),
                ('discom', models.CharField(default='00', max_length=10)),
                ('zone', models.CharField(default='00', max_length=10)),
                ('city_code', models.CharField(default='00', max_length=10)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this item is active.', verbose_name='active status')),
                ('name', models.CharField(max_length=200, verbose_name='city name')),
                ('latitude', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('longitude', models.DecimalField(decimal_places=4, default=0, max_digits=7)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.state')),
            ],
            options={
                'verbose_name_plural': 'cities',
            },
        ),
    ]
